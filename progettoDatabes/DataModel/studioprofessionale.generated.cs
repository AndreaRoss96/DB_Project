//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModel
{
	/// <summary>
	/// Database       : studioprofessionale
	/// Data Source    : localhost
	/// Server Version : 5.5.5-10.2.14-MariaDB
	/// </summary>
	public partial class StudioprofessionaleDB : LinqToDB.Data.DataConnection
	{
		public ITable<Account>        Accounts        { get { return this.GetTable<Account>(); } }
		public ITable<Allocazione>    Allocaziones    { get { return this.GetTable<Allocazione>(); } }
		public ITable<Categoria>      Categorias      { get { return this.GetTable<Categoria>(); } }
		public ITable<Cliente>        Clientes        { get { return this.GetTable<Cliente>(); } }
		public ITable<CostoStruttura> CostoStruttura  { get { return this.GetTable<CostoStruttura>(); } }
		public ITable<Dipendente>     Dipendentes     { get { return this.GetTable<Dipendente>(); } }
		public ITable<Fase>           Fases           { get { return this.GetTable<Fase>(); } }
		public ITable<Pratica>        Praticas        { get { return this.GetTable<Pratica>(); } }
		public ITable<Prestazione>    Prestaziones    { get { return this.GetTable<Prestazione>(); } }
		public ITable<Responsabile>   Responsabiles   { get { return this.GetTable<Responsabile>(); } }
		public ITable<Ruolo>          Ruoloes         { get { return this.GetTable<Ruolo>(); } }
		public ITable<Sede>           Sedes           { get { return this.GetTable<Sede>(); } }
		public ITable<Sottocategoria> Sottocategorias { get { return this.GetTable<Sottocategoria>(); } }

		public StudioprofessionaleDB()
		{
			InitDataContext();
		}

		public StudioprofessionaleDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table("account")]
	public partial class Account
	{
		[Column("username"),       PrimaryKey, NotNull] public string Username       { get; set; } // varchar(20)
		[Column("password"),                   NotNull] public string Password       { get; set; } // varchar(20)
		[Column("matricola"),                  NotNull] public int    Matricola      { get; set; } // int(11)
		[Column("amministratore"),             NotNull] public sbyte  Amministratore { get; set; } // tinyint(4)
	}

	[Table("allocazione")]
	public partial class Allocazione
	{
		[Column("matricola"),  PrimaryKey(2), NotNull] public int Matricola  { get; set; } // int(11)
		[Column("codiceSede"), PrimaryKey(1), NotNull] public int CodiceSede { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FKall_DIP_FK
		/// </summary>
		[Association(ThisKey="Matricola", OtherKey="Matricola", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FKall_DIP_FK", BackReferenceName="FKallDIPFKs")]
		public Dipendente FKallDIPFK { get; set; }

		/// <summary>
		/// FKall_SED
		/// </summary>
		[Association(ThisKey="CodiceSede", OtherKey="CodiceSede", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FKall_SED", BackReferenceName="FKallSEDs")]
		public Sede FKallSED { get; set; }

		#endregion
	}

	[Table("categoria")]
	public partial class Categoria
	{
		[Column("codiceCategoria"), PrimaryKey, Identity] public int    CodiceCategoria { get; set; } // int(11)
		[Column("nome"),            NotNull             ] public string Nome            { get; set; } // varchar(20)
		[Column("descrizione"),     NotNull             ] public string Descrizione     { get; set; } // varchar(1024)
	}

	[Table("cliente")]
	public partial class Cliente
	{
		[Column("codiceFiscale"), PrimaryKey,  NotNull] public string CodiceFiscale { get; set; } // varchar(16)
		[Column("nominativo"),                 NotNull] public string Nominativo    { get; set; } // varchar(20)
		[Column("via"),                        NotNull] public string Via           { get; set; } // varchar(35)
		[Column(),                             NotNull] public string CAP           { get; set; } // varchar(10)
		[Column("citta"),                      NotNull] public string Citta         { get; set; } // varchar(34)
		[Column("tipo"),                       NotNull] public char   Tipo          { get; set; } // char(1)
		[Column("partitaIVA"),       Nullable         ] public string PartitaIVA    { get; set; } // varchar(11)
		[Column("codiceSede"),                 NotNull] public int    CodiceSede    { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FKservizio_FK
		/// </summary>
		[Association(ThisKey="CodiceSede", OtherKey="CodiceSede", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FKservizio_FK", BackReferenceName="FKservizioFKs")]
		public Sede FKservizioFK { get; set; }

		#endregion
	}

	[Table("costo_struttura")]
	public partial class CostoStruttura
	{
		[Column("codiceCostoStruttura"), PrimaryKey,  Identity] public int      CodiceCostoStruttura { get; set; } // int(11)
		[Column("dataPagamento"),        NotNull              ] public DateTime DataPagamento        { get; set; } // date
		[Column("costo"),                NotNull              ] public float    Costo                { get; set; } // float
		[Column("descrizione"),          NotNull              ] public string   Descrizione          { get; set; } // varchar(1024)
		[Column("tipo"),                 NotNull              ] public char     Tipo                 { get; set; } // char(1)
		[Column("quantita"),                Nullable          ] public int?     Quantita             { get; set; } // int(11)
		[Column("codiceSede"),           NotNull              ] public int      CodiceSede           { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FKsalda_FK
		/// </summary>
		[Association(ThisKey="CodiceSede", OtherKey="CodiceSede", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FKsalda_FK", BackReferenceName="FKsaldaFKs")]
		public Sede FKsaldaFK { get; set; }

		#endregion
	}

	[Table("dipendente")]
	public partial class Dipendente
	{
		[Column("matricola"),   PrimaryKey,  Identity] public int    Matricola   { get; set; } // int(11)
		[Column("nome"),        NotNull              ] public string Nome        { get; set; } // varchar(20)
		[Column("cognome"),     NotNull              ] public string Cognome     { get; set; } // varchar(20)
		[Column("via"),         NotNull              ] public string Via         { get; set; } // varchar(35)
		[Column(),              NotNull              ] public string CAP         { get; set; } // varchar(10)
		[Column("citta"),       NotNull              ] public string Citta       { get; set; } // varchar(34)
		[Column("costoOrario"), NotNull              ] public float  CostoOrario { get; set; } // float
		[Column("tipo"),        NotNull              ] public char   Tipo        { get; set; } // char(1)
		[Column("stipendio"),      Nullable          ] public int?   Stipendio   { get; set; } // int(11)
		[Column("codiceRuolo"), NotNull              ] public int    CodiceRuolo { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// FKall_DIP_FK_BackReference
		/// </summary>
		[Association(ThisKey="Matricola", OtherKey="Matricola", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Allocazione> FKallDIPFKs { get; set; }

		#endregion
	}

	[Table("fase")]
	public partial class Fase
	{
		[Column("codiceFiscale"),     PrimaryKey(2), NotNull] public string   CodiceFiscale     { get; set; } // varchar(16)
		[Column("codicePratica"),     PrimaryKey(3), NotNull] public int      CodicePratica     { get; set; } // int(11)
		[Column("codicePrestazione"), PrimaryKey(4), NotNull] public int      CodicePrestazione { get; set; } // int(11)
		[Column("matricola"),         PrimaryKey(1), NotNull] public int      Matricola         { get; set; } // int(11)
		[Column("inizio"),            PrimaryKey(5), NotNull] public DateTime Inizio            { get; set; } // datetime
		[Column("fine"),                             NotNull] public DateTime Fine              { get; set; } // datetime
		[Column("descrizione"),                      NotNull] public string   Descrizione       { get; set; } // varchar(1024)
	}

	[Table("pratica")]
	public partial class Pratica
	{
		[Column("codiceFiscale"), PrimaryKey(1), NotNull] public string   CodiceFiscale { get; set; } // varchar(16)
		[Column("codicePratica"), PrimaryKey(2), NotNull] public int      CodicePratica { get; set; } // int(11)
		[Column("nome"),                         NotNull] public string   Nome          { get; set; } // varchar(30)
		[Column("dataRichiesta"),                NotNull] public DateTime DataRichiesta { get; set; } // date
	}

	[Table("prestazione")]
	public partial class Prestazione
	{
		[Column("codiceFiscale"),        PrimaryKey(1), NotNull] public string   CodiceFiscale        { get; set; } // varchar(16)
		[Column("codicePratica"),        PrimaryKey(2), NotNull] public int      CodicePratica        { get; set; } // int(11)
		[Column("codicePrestazione"),    PrimaryKey(3), NotNull] public int      CodicePrestazione    { get; set; } // int(11)
		[Column("compenso"),                            NotNull] public float    Compenso             { get; set; } // float
		[Column("durata"),                              NotNull] public TimeSpan Durata               { get; set; } // time
		[Column("pagata"),                              NotNull] public bool     Pagata               { get; set; } // tinyint(1)
		[Column("terminata"),                           NotNull] public bool     Terminata            { get; set; } // tinyint(1)
		[Column("codiceSottocategoria"),                NotNull] public int      CodiceSottocategoria { get; set; } // int(11)
	}

	[Table("responsabile")]
	public partial class Responsabile
	{
		[Column("codiceFiscale"), PrimaryKey(1), NotNull] public string    CodiceFiscale { get; set; } // varchar(16)
		[Column("matricola"),     PrimaryKey(2), NotNull] public int       Matricola     { get; set; } // int(11)
		[Column("dataInizio"),    PrimaryKey(3), NotNull] public DateTime  DataInizio    { get; set; } // date
		[Column("dataFine"),         Nullable           ] public DateTime? DataFine      { get; set; } // date
	}

	[Table("ruolo")]
	public partial class Ruolo
	{
		[Column("codiceRuolo"), PrimaryKey, Identity] public int    CodiceRuolo { get; set; } // int(11)
		[Column("nome"),        NotNull             ] public string Nome        { get; set; } // varchar(25)
	}

	[Table("sede")]
	public partial class Sede
	{
		[Column("codiceSede"), PrimaryKey, Identity] public int    CodiceSede { get; set; } // int(11)
		[Column("nome"),       NotNull             ] public string Nome       { get; set; } // varchar(35)
		[Column("via"),        NotNull             ] public string Via        { get; set; } // varchar(35)
		[Column(),             NotNull             ] public string CAP        { get; set; } // varchar(10)
		[Column("citta"),      NotNull             ] public string Citta      { get; set; } // varchar(34)

		#region Associations

		/// <summary>
		/// FKall_SED_BackReference
		/// </summary>
		[Association(ThisKey="CodiceSede", OtherKey="CodiceSede", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Allocazione> FKallSEDs { get; set; }

		/// <summary>
		/// FKsalda_FK_BackReference
		/// </summary>
		[Association(ThisKey="CodiceSede", OtherKey="CodiceSede", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<CostoStruttura> FKsaldaFKs { get; set; }

		/// <summary>
		/// FKservizio_FK_BackReference
		/// </summary>
		[Association(ThisKey="CodiceSede", OtherKey="CodiceSede", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Cliente> FKservizioFKs { get; set; }

		#endregion
	}

	[Table("sottocategoria")]
	public partial class Sottocategoria
	{
		[Column("codiceSottocategoria"), PrimaryKey, Identity] public int    CodiceSottocategoria { get; set; } // int(11)
		[Column("nome"),                 NotNull             ] public string Nome                 { get; set; } // varchar(120)
		[Column("descrizione"),          NotNull             ] public string Descrizione          { get; set; } // varchar(1024)
		[Column("costoFissoPerCliente"), NotNull             ] public float  CostoFissoPerCliente { get; set; } // float
		[Column("tipoPF"),               NotNull             ] public bool   TipoPF               { get; set; } // tinyint(1)
		[Column("tipoAZ"),               NotNull             ] public bool   TipoAZ               { get; set; } // tinyint(1)
		[Column("codiceCategoria"),      NotNull             ] public int    CodiceCategoria      { get; set; } // int(11)
	}

	public static partial class TableExtensions
	{
		public static Account Find(this ITable<Account> table, string Username)
		{
			return table.FirstOrDefault(t =>
				t.Username == Username);
		}

		public static Allocazione Find(this ITable<Allocazione> table, int Matricola, int CodiceSede)
		{
			return table.FirstOrDefault(t =>
				t.Matricola  == Matricola &&
				t.CodiceSede == CodiceSede);
		}

		public static Categoria Find(this ITable<Categoria> table, int CodiceCategoria)
		{
			return table.FirstOrDefault(t =>
				t.CodiceCategoria == CodiceCategoria);
		}

		public static Cliente Find(this ITable<Cliente> table, string CodiceFiscale)
		{
			return table.FirstOrDefault(t =>
				t.CodiceFiscale == CodiceFiscale);
		}

		public static CostoStruttura Find(this ITable<CostoStruttura> table, int CodiceCostoStruttura)
		{
			return table.FirstOrDefault(t =>
				t.CodiceCostoStruttura == CodiceCostoStruttura);
		}

		public static Dipendente Find(this ITable<Dipendente> table, int Matricola)
		{
			return table.FirstOrDefault(t =>
				t.Matricola == Matricola);
		}

		public static Fase Find(this ITable<Fase> table, string CodiceFiscale, int CodicePratica, int CodicePrestazione, int Matricola, DateTime Inizio)
		{
			return table.FirstOrDefault(t =>
				t.CodiceFiscale     == CodiceFiscale     &&
				t.CodicePratica     == CodicePratica     &&
				t.CodicePrestazione == CodicePrestazione &&
				t.Matricola         == Matricola         &&
				t.Inizio            == Inizio);
		}

		public static Pratica Find(this ITable<Pratica> table, string CodiceFiscale, int CodicePratica)
		{
			return table.FirstOrDefault(t =>
				t.CodiceFiscale == CodiceFiscale &&
				t.CodicePratica == CodicePratica);
		}

		public static Prestazione Find(this ITable<Prestazione> table, string CodiceFiscale, int CodicePratica, int CodicePrestazione)
		{
			return table.FirstOrDefault(t =>
				t.CodiceFiscale     == CodiceFiscale &&
				t.CodicePratica     == CodicePratica &&
				t.CodicePrestazione == CodicePrestazione);
		}

		public static Responsabile Find(this ITable<Responsabile> table, string CodiceFiscale, int Matricola, DateTime DataInizio)
		{
			return table.FirstOrDefault(t =>
				t.CodiceFiscale == CodiceFiscale &&
				t.Matricola     == Matricola     &&
				t.DataInizio    == DataInizio);
		}

		public static Ruolo Find(this ITable<Ruolo> table, int CodiceRuolo)
		{
			return table.FirstOrDefault(t =>
				t.CodiceRuolo == CodiceRuolo);
		}

		public static Sede Find(this ITable<Sede> table, int CodiceSede)
		{
			return table.FirstOrDefault(t =>
				t.CodiceSede == CodiceSede);
		}

		public static Sottocategoria Find(this ITable<Sottocategoria> table, int CodiceSottocategoria)
		{
			return table.FirstOrDefault(t =>
				t.CodiceSottocategoria == CodiceSottocategoria);
		}
	}
}
